{"version":3,"sources":["components/PageContainer/style.js","components/PageContainer/index.js","pages/Home/index.jsx","pages/Count/index.jsx","mockApi.js","pages/Table/style.js","pages/Table/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["style","theme","PageContainer","header","display","alignItems","height","spacing","padding","classes","children","className","to","fontSize","color","Card","PageCard","defaultProps","withStyles","Home","history","useHistory","width","margin","marginBottom","Button","variant","onClick","push","marginLeft","Count","useState","count","setCount","c","userList","Array","fill","name","email","position","map","u","i","id","Math","random","toString","replace","concat","tablecontainer_container","tableHead","transform","fontWeight","DialogContent","flexDirection","justifyContent","withRouter","location","paramsFromLocation","qs","parse","search","page","Number","pagination","loading","setLoading","totalPages","items","data","setData","openDialog","setOpenDialog","addingNewUser","setAddingNewUser","errorNewUser","setErrorNewUser","newUserData","setNewUserData","useEffect","skeleton","item","Skeleton","floor","getList","Promise","resolve","setTimeout","ceil","length","slice","mockApi","then","res","catch","e","finally","TableContainer","component","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","size","align","TableBody","scope","startIcon","Pagination","onChange","_","p","newPage","pathname","Dialog","open","onClose","TextField","placeholder","target","value","userinfo","reject","some","newUser","CircularProgress","App","basename","window","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1aea4bd.chunk.js","sourcesContent":["const style = (theme) => ({\n  PageContainer: {},\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: theme.spacing(14),\n    padding: theme.spacing(0, 5),\n  },\n})\n\nexport default style\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Card, withStyles } from '@material-ui/core'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport LooksOneIcon from '@material-ui/icons/LooksOne'\nimport ListAltIcon from '@material-ui/icons/ListAlt'\n\nimport style from './style'\n\nconst PageContainer = ({ classes, children }) => {\n  return (\n    <div className={classes.PageContainer}>\n      <div className={classes.header}>\n        <Link to=\"/\">\n          <HomeIcon fontSize=\"large\" color=\"action\" />\n        </Link>\n        <Link to=\"/count\">\n          <LooksOneIcon fontSize=\"large\" color=\"action\" />\n        </Link>\n        <Link to=\"/table\">\n          <ListAltIcon fontSize=\"large\" color=\"action\" />\n        </Link>\n      </div>\n      <Card className={classes.PageCard}>{children}</Card>\n    </div>\n  )\n}\n\nPageContainer.defaultProps = {}\n\nPageContainer.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default withStyles(style)(PageContainer)\n","import { useHistory } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport PageContainer from '../../components/PageContainer'\n\nconst Home = () => {\n  const history = useHistory()\n\n  return (\n    <PageContainer>\n      <div\n        style={{\n          width: 'clamp(600px, 80%, 1000px',\n          margin: 'auto',\n          marginBottom: 10,\n        }}\n      >\n        <Button variant=\"contained\" onClick={() => history.push('/count')}>\n          Count\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => history.push('/table')}\n          style={{ marginLeft: 8 }}\n        >\n          Table\n        </Button>\n      </div>\n    </PageContainer>\n  )\n}\n\nexport default Home\n","import { useState } from 'react'\nimport Button from '@material-ui/core/Button'\n\nimport PageContainer from '../../components/PageContainer'\n\nconst Count = () => {\n  const [count, setCount] = useState(0)\n\n  return (\n    <PageContainer>\n      <div style={{ width: 'clamp(600px, 80%, 1000px', margin: 'auto' }}>\n        <h1>{count}</h1>\n        <Button color=\"primary\" onClick={() => setCount((c) => c + 1)}>\n          Increase 1\n        </Button>\n        <Button color=\"primary\" onClick={() => setCount(0)}>\n          Reset to 0\n        </Button>\n      </div>\n    </PageContainer>\n  )\n}\n\nexport default Count\n","const userList = new Array(20)\n  .fill({\n    name: 'Danny',\n    email: 'danny@gmail.com',\n    position: 'Developer',\n  })\n  .map((u, i) => ({\n    id: Math.random().toString().replace(/\\d\\./, ''),\n    name: u.name.concat('_', i),\n    email: 'mail'.concat(u.email, '_', i),\n    position: u.position,\n  }))\n\nconst getList = ({ page = 1, pagination = 5 }) =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        page,\n        totalPages: Math.ceil(userList.length / pagination),\n        items: userList.slice((page - 1) * pagination, page * pagination),\n      })\n    }, 600)\n  })\n\nconst addUser = (userinfo) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const { name, email, position } = userinfo\n      if (!name || !email || !position) {\n        reject('Not enough info to create user!')\n      } else if (userList.some((u) => u.email === email)) {\n        reject('Email is existed!')\n      } else {\n        const newUser = {\n          id: Math.random().toString().replace(/\\d\\./, ''),\n          name,\n          email,\n          position,\n        }\n        userList.push(newUser)\n        resolve(newUser)\n      }\n    }, 600)\n  })\n\nexport { getList, addUser }\n","const style = (theme) => ({\n  tablecontainer_container: {\n    width: 'clamp(500px, 80%, 1000px)',\n    margin: 'auto',\n  },\n  tableHead: {\n    '& > svg': {\n      transform: 'translateY(4px)',\n    },\n    '& > span': {\n      color: '#757575',\n      fontWeight: 'bold',\n      fontSize: theme.spacing(2),\n      marginLeft: theme.spacing(1),\n    },\n  },\n  DialogContent: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: 200,\n    '& > div:first-child': {\n      color: 'red',\n      width: 400,\n    },\n  },\n})\n\nexport default style\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport qs from 'query-string'\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  withStyles,\n  Paper,\n  Button,\n  Dialog,\n  TextField,\n  CircularProgress,\n} from '@material-ui/core'\nimport { Skeleton, Pagination } from '@material-ui/lab'\n\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck'\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail'\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport * as mockApi from '../../mockApi'\n\nimport style from './style'\nimport PageContainer from '../../components/PageContainer'\n\nconst TableData = ({ classes, history, location }) => {\n  const paramsFromLocation = qs.parse(location.search)\n\n  const { page, pagination } = {\n    page: paramsFromLocation.page ? Number(paramsFromLocation.page) : 1,\n    pagination: paramsFromLocation.pagination\n      ? Number(paramsFromLocation.pagination)\n      : 5,\n  }\n\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState({\n    page,\n    totalPages: 1,\n    items: [],\n  })\n  const [openDialog, setOpenDialog] = useState(false)\n  const [addingNewUser, setAddingNewUser] = useState(false)\n  const [errorNewUser, setErrorNewUser] = useState('')\n  const [newUserData, setNewUserData] = useState({\n    name: '',\n    email: '',\n    position: '',\n  })\n\n  useEffect(() => {\n    if (errorNewUser) setErrorNewUser('')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newUserData])\n\n  const skeleton = new Array(pagination).fill(true).map((item, i) => ({\n    id: i,\n    name: <Skeleton width={`${Math.floor(Math.random() * 51 + 50)}%`} />,\n    email: <Skeleton width={`${Math.floor(Math.random() * 51 + 50)}%`} />,\n    position: <Skeleton width={`${Math.floor(Math.random() * 51 + 50)}%`} />,\n  }))\n\n  const getList = () => {\n    setLoading(true)\n    mockApi\n      .getList({\n        page,\n        pagination,\n      })\n      .then((res) => setData(res))\n      .catch((e) => {}) // this mockApi cannot be error\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, pagination])\n\n  useEffect(() => {\n    if (!openDialog) {\n      setNewUserData({\n        name: '',\n        email: '',\n        position: '',\n      })\n    }\n  }, [openDialog])\n\n  const onPageChange = (newPage) => {\n    history.push({\n      pathname: location.pathname,\n      search: location.search.replace(/page=\\d*/, '').concat('page=', newPage),\n    })\n  }\n\n  const addNewUser = () => {\n    setAddingNewUser(true)\n    mockApi\n      .addUser(newUserData)\n      .then(() => {\n        setOpenDialog(false)\n        getList()\n      })\n      .catch((e) => setErrorNewUser(e))\n      .finally(() => setAddingNewUser(false))\n  }\n\n  return (\n    <PageContainer>\n      <TableContainer\n        className={classes.tablecontainer_container}\n        component={Paper}\n      >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.tableHead}>\n                <SpellcheckIcon size=\"small\" color=\"action\" />\n                <span>Name</span>\n              </TableCell>\n              <TableCell className={classes.tableHead} align=\"right\">\n                <AlternateEmailIcon size=\"small\" color=\"action\" />\n                <span>Email</span>\n              </TableCell>\n              <TableCell className={classes.tableHead} align=\"right\">\n                <AccessibilityNewIcon size=\"small\" color=\"action\" />\n                <span>Position</span>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(loading ? skeleton : data.items).map((item) => (\n              <TableRow key={item.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell align=\"right\">{item.email}</TableCell>\n                <TableCell align=\"right\">{item.position}</TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <Button\n                startIcon={<AddIcon />}\n                onClick={() => setOpenDialog(true)}\n              >\n                New\n              </Button>\n            </TableRow>\n          </TableBody>\n        </Table>\n        <Pagination\n          count={data.totalPages}\n          page={page}\n          onChange={(_, p) => onPageChange(p)}\n        />\n      </TableContainer>\n\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <div className={classes.DialogContent}>\n          <div>{errorNewUser}</div>\n          <TextField\n            placeholder=\"Name\"\n            onChange={(e) =>\n              setNewUserData((u) => ({ ...u, name: e.target.value }))\n            }\n          />\n          <TextField\n            placeholder=\"Email\"\n            onChange={(e) =>\n              setNewUserData((u) => ({ ...u, email: e.target.value }))\n            }\n          />\n          <TextField\n            placeholder=\"Position\"\n            onChange={(e) =>\n              setNewUserData((u) => ({ ...u, position: e.target.value }))\n            }\n          />\n          <Button\n            variant=\"contained\"\n            onClick={addNewUser}\n            startIcon={addingNewUser ? <CircularProgress size={24} /> : ''}\n          >\n            Add\n          </Button>\n        </div>\n      </Dialog>\n    </PageContainer>\n  )\n}\n\nexport default withRouter(withStyles(style)(TableData))\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './App.css'\n\nimport Home from './pages/Home'\nimport Count from './pages/Count'\nimport Table from './pages/Table'\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <Switch>\n        <Route exact path=\"/count\" component={Count} />\n        <Route exact path=\"/table\" component={Table} />\n        <Route component={Home} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}